/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

package com.MAVLink.common;

/**
* X.25 CRC calculation for MAVlink messages. The checksum must be initialized,
* updated with witch field of the message, and then finished with the message
* id.
*
*/
public class CRC {
    private static final int[] MAVLINK_MESSAGE_CRCS = {50, 124, 137, 237, 217, 104, 119, 89, 214, 159, 220, 168, 24, 23, 170, 144, 67, 115, 39, 246, 185, 104, 237, 244, 222, 212, 9, 254, 230, 28, 28, 132, 221, 232, 11, 153, 41, 39, 78, 196, 15, 3, 167, 183, 119, 191, 118, 148, 21, 243, 124, 38, 20, 158, 152, 143, 106, 49, 22, 143, 140, 5, 150, 231, 183, 63, 54, 47, 175, 102, 158, 208, 56, 93, 138, 108, 32, 185, 84, 34, 174, 124, 237, 4, 76, 128, 56, 116, 134, 237, 203, 250, 87, 203, 220, 25, 226, 46, 29, 223, 85, 6, 229, 203, 1, 195, 109, 168, 181, 47, 72, 131, 127, 103, 154, 178, 200, 163, 105, 151, 35, 150, 179, 90, 104, 85, 95, 130, 184, 81, 8, 204, 49, 170, 44, 83, 46};
    private static final int[] MAVLINK_MESSAGE_IDS = {0, 1, 2, 4, 5, 6, 7, 11, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 61, 62, 63, 64, 65, 66, 67, 69, 70, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 230, 231, 232, 233, 234, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254};
    private static final int CRC_INIT_VALUE = 0xffff;
    private int crcValue;

    /**
    * Accumulate the X.25 CRC by adding one char at a time.
    *
    * The checksum function adds the hash of one char at a time to the 16 bit
    * checksum (uint16_t).
    *
    * @param data
    *            new char to hash
    **/
    public  void update_checksum(int data) {
        data = data & 0xff; //cast because we want an unsigned type
        int tmp = data ^ (crcValue & 0xff);
        tmp ^= (tmp << 4) & 0xff;
        crcValue = ((crcValue >> 8) & 0xff) ^ (tmp << 8) ^ (tmp << 3) ^ ((tmp >> 4) & 0xf);
    }

    /**
    * Finish the CRC calculation of a message, by running the CRC with the
    * Magic Byte. This Magic byte has been defined in MAVlink v1.0.
    *
    * @param msgid
    *            The message id number
    * @return crc_extra
    *            The crc_extra value for the given message
    */
    public int finish_checksum(int msgid) {
        int crc = 0;
        if (msgid == 0) {
            /* special handling to high frequency heartbeat message */
            crc = MAVLINK_MESSAGE_CRCS[0];
        } else {
            int low = 0, high = MAVLINK_MESSAGE_IDS.length - 1;
            while (low <= high) {
                int mid = (low + high) / 2;
                if (msgid == MAVLINK_MESSAGE_IDS[mid]) {
                    crc = MAVLINK_MESSAGE_CRCS[mid];
                    break;
                } else if (msgid < MAVLINK_MESSAGE_IDS[mid]) {
                    high = mid - 1;
                } else
                    low = mid + 1;
            }
        }
        update_checksum(crc);
        return crc;
    }

    /**
    * Initialize the buffer for the X.25 CRC
    *
    */
    public void start_checksum() {
        crcValue = CRC_INIT_VALUE;
    }

    public int getMSB() {
        return ((crcValue >> 8) & 0xff);
    }

    public int getLSB() {
        return (crcValue & 0xff);
    }

    public CRC() {
        start_checksum();
    }

}
        