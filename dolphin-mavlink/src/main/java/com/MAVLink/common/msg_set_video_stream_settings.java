/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE SET_VIDEO_STREAM_SETTINGS PACKING
package com.MAVLink.common;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
        
/**
* WIP: Message that sets video stream settings
*/
public class msg_set_video_stream_settings extends MAVLinkMessage{

    public static final int MAVLINK_MSG_ID_SET_VIDEO_STREAM_SETTINGS = 270;
    public static final int MAVLINK_MSG_LENGTH = 247;
    private static final long serialVersionUID = MAVLINK_MSG_ID_SET_VIDEO_STREAM_SETTINGS;


      
    /**
    * Frames per second (set to -1 for highest framerate possible)
    */
    public float framerate;
      
    /**
    * Bit rate in bits per second (set to -1 for auto)
    */
    public long bitrate;
      
    /**
    * Resolution horizontal in pixels (set to -1 for highest resolution possible)
    */
    public int resolution_h;
      
    /**
    * Resolution vertical in pixels (set to -1 for highest resolution possible)
    */
    public int resolution_v;
      
    /**
    * Video image rotation clockwise (0-359 degrees)
    */
    public int rotation;
      
    /**
    * system ID of the target
    */
    public short target_system;
      
    /**
    * component ID of the target
    */
    public short target_component;
      
    /**
    * Camera ID (1 for first, 2 for second, etc.)
    */
    public short camera_id;
      
    /**
    * Video stream URI
    */
    public byte uri[] = new byte[230];
    

    /**
    * Generates the payload for a mavlink message for a message of this type
    * @return
    */
    public MAVLinkPacket pack(){
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH);
        packet.sysid = 255;
        packet.compid = 190;
        packet.msgid = MAVLINK_MSG_ID_SET_VIDEO_STREAM_SETTINGS;
              
        packet.payload.putFloat(framerate);
              
        packet.payload.putUnsignedInt(bitrate);
              
        packet.payload.putUnsignedShort(resolution_h);
              
        packet.payload.putUnsignedShort(resolution_v);
              
        packet.payload.putUnsignedShort(rotation);
              
        packet.payload.putUnsignedByte(target_system);
              
        packet.payload.putUnsignedByte(target_component);
              
        packet.payload.putUnsignedByte(camera_id);
              
        
        for (int i = 0; i < uri.length; i++) {
            packet.payload.putByte(uri[i]);
        }
                    
        
        return packet;
    }

    /**
    * Decode a set_video_stream_settings message into this class fields
    *
    * @param payload The message to decode
    */
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();
              
        this.framerate = payload.getFloat();
              
        this.bitrate = payload.getUnsignedInt();
              
        this.resolution_h = payload.getUnsignedShort();
              
        this.resolution_v = payload.getUnsignedShort();
              
        this.rotation = payload.getUnsignedShort();
              
        this.target_system = payload.getUnsignedByte();
              
        this.target_component = payload.getUnsignedByte();
              
        this.camera_id = payload.getUnsignedByte();
              
         
        for (int i = 0; i < this.uri.length; i++) {
            this.uri[i] = payload.getByte();
        }
                
        
    }

    /**
    * Constructor for a new message, just initializes the msgid
    */
    public msg_set_video_stream_settings(){
        msgid = MAVLINK_MSG_ID_SET_VIDEO_STREAM_SETTINGS;
    }

    /**
    * Constructor for a new message, initializes the message with the payload
    * from a mavlink packet
    *
    */
    public msg_set_video_stream_settings(MAVLinkPacket mavLinkPacket){
        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.msgid = MAVLINK_MSG_ID_SET_VIDEO_STREAM_SETTINGS;
        unpack(mavLinkPacket.payload);        
    }

                     
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setUri(String str) {
        int len = Math.min(str.length(), 230);
        for (int i=0; i<len; i++) {
            uri[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<230; i++) {            // padding for the rest of the buffer
            uri[i] = 0;
        }
    }

    /**
    * Gets the message, formated as a string
    */
    public String getUri() {
        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < 230; i++) {
            if (uri[i] != 0)
                buf.append((char) uri[i]);
            else
                break;
        }
        return buf.toString();

    }
                         
    /**
    * Returns a string with the MSG name and data
    */
    public String toString(){
        return "MAVLINK_MSG_ID_SET_VIDEO_STREAM_SETTINGS - sysid:"+sysid+" compid:"+compid+" framerate:"+framerate+" bitrate:"+bitrate+" resolution_h:"+resolution_h+" resolution_v:"+resolution_v+" rotation:"+rotation+" target_system:"+target_system+" target_component:"+target_component+" camera_id:"+camera_id+" uri:"+uri+"";
    }
}
        